---
name: module4_task1

on:
  push:
    branches:
      - main
      - master

    tags:
      - '*'

  schedule:
    - cron: '0 0 * * *'

  pull_request:
    types: [opened, reopened, edited, ready_for_review]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Clone the repository
        uses: actions/checkout@v3

      - name: installing Hugo
        run: cd ./module4_task1 && ./setup.sh

      - name: install the Markdownlint
        run: npm install -g markdownlint-cli

      - name: Lint the files
        run: cd module4_task1 && make lint

      - name: unit-tests
        run: cd module4_task1 && make unit-tests

      - name: integration-tests
        run: cd module4_task1 && make integration-tests

      - name: Archives the files
        run: cd module4_task1 && make package

      - name: validate the Makefile
        run: cd module4_task1 && make help && make build

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          publish-message: "ðŸŽ‰ Published on"
          deploy-message: "ðŸš€ Deployed on"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

  create-release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: install the Markdownlint
        run: npm install -g markdownlint-cli

      - name: Install Hugo
        run: cd ./module4_task1 && ./setup.sh

      - name: Archives the files
        run: cd module4_task1 && make package

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          files: ./module4_task1/awesome-website.zip
          body_path: ./module4_task1/DEPLOY.md
